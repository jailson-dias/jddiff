for param in $@; do
    case $param in
    -h|--help) 
        echo "To compare two folders you need to have the git and VS Code installed on your computer."
        echo "this software uses git to find the difference between the files in the folders"
        echo "and uses VS Code to show the difference between folders for you."
        echo ""
        echo ""
        echo "To do this, the software uses three parameters"
        echo "1. The first parameter is the first folder"
        echo "2. The second parameter is the second folder"
        echo "3. The third parameter is the folder where the difference between the folders will be saved"
        exit 0
    ;;
    esac
done

[ -z "$3" ] && echo "Please specify folder1, folder2 and directory to save the diff between folders" && exit

if ! [ -x "$(command -v git)" ] || ! [ -x "$(command -v code)" ]; then
    echo "git or VS Code are not installed"
    echo "Please install them and try again"
    exit 1
fi

if [ -d "$3" ]; then
    echo "Directory $3 exists."
    echo "Continue [Y/n]?"
    read cont
    if [ "$cont" == "N" ] || [ "$cont" == "n" ]; then 
        exit 0
    fi
    rm -rf $3
fi

echo "Comparing folder $1 with $2"
echo ""
mkdir $3

# current directory
current=$(pwd)
cd $3

cp -r $1 ./folder1
cp -r $2 ./folder2

if [ -d "./folder1/.git" ]; then 
    echo "Removing git folder from $1 folder"
    rm -rf ./folder1/.git
fi
if [ -d "./folder2/.git" ]; then 
    echo "Removing git folder from $2 folder"
    rm -rf ./folder2/.git
fi

# Copying files from folder1 to jddiff
cp -r ./folder1 ./jddiff

# Creating git project with files from folder1
git init
git add jddiff
git commit -m "Folder $1"

# Removing code from folder1 and replace it with the code from folder2
rm -rf ./jddiff
cp -r ./folder2 ./jddiff

# Removing folder1 and folder2
rm -rf ./folder1
rm -rf ./folder2

# return to current directory
cd $current

# Open VS Code to display difference between the two folders
echo "Opening the VS Code"
code $3

